/*
* Root folder path access
*/ 
cd /var/www/html/laravelgs/


/*
* Some basic linix command
*/

//Check composer install or not
sudo composer

//Install laravel via composer
sudo composer create-project laravel/laravel laravelgs --prefer-dist
or
sudo composer create-project --prefer-dist laravel/laravel laravelblog "5.5.*"
composer create-project --prefer-dist laravel/laravel laraveljwt "5.8.*"

sudo chmod -R 777 /var/www/html/laravelgs/

sudo service apache2 restart

sudo service apache2 stop

sudo service apache2 start

//Composer command to update or install vendor folder When Vendor missing
composer update --no-scripts 
composer install




https://stackoverflow.com/questions/43565877/no-access-control-allow-origin-header-laravel/52399362#52399362


/*
* Laravel command
*/
php artisan make:migration {CreateTicketsTable}
OR
//Add extra field 
php artisan make:migration add_extra_field_to_employees_table --table=employees

php artisan make:migration add_extra_field_to_posts_table --table=posts

php artisan make:controller API/UserController

php artisan make:model Ticket 
or 
php artisan make:model Member -c



php artisan make:seeder UsersTableSeeder
php artisan db:seed --class=UsersTableSeeder
php artisan db:seed

php artisan make:migration --table=users adds_api_token_to_users_table

For Laravel >=6
composer require laravel/ui
php artisan ui vue --auth
php artisan migrate
npm install
npm run dev


php artisan make:auth

php artisan migrate

php artisan route:list

php artisan serve

php artisan key:generate


php artisan make:migration Create Categories Table

php artisan make:model CategoryRelationship -mcr


php artisan make:controller UserController --model=User

php artisan make:model Todo -mcr
-m, --migration Create a new migration file for the model.
-c, --controller Create a new controller for the model.
-r, --resource Indicates if the generated controller should be a resource controller


Laravel 5.6
php artisan make:model Todo -a   
-a, --all Generate a migration, factory, and resource controller for the model



/*
* Turorial
*/

//Crud opration tutorial
http://www.expertphp.in/article/laravel-5-5-crud-create-read-update-delete-example-from-scratch==>working

//upload file tutorial
https://blog.hashvel.com/posts/laravel-image-upload/==>working



//Add Form HTML 
Step-1:
//Open: composer.json

"require": {
    "laravelcollective/html": "~5.0"
}

Run command: composer update


Step-2:
//config/app.php

'aliases' => [
// ...
  'Form' => 'Collective\Html\FormFacade',
  'Html' => 'Collective\Html\HtmlFacade',
// ...
],

Now it working..



//htaccess to remove public folder

<IfModule mod_rewrite.c>
    <IfModule mod_negotiation.c>
        Options -MultiViews
    </IfModule>

    RewriteEngine On

    RewriteCond %{REQUEST_FILENAME} -d [OR]
    RewriteCond %{REQUEST_FILENAME} -f
    RewriteRule ^ ^$1 [N]

    RewriteCond %{REQUEST_URI} (\.\w+$) [NC]
    RewriteRule ^(.*)$ public/$1 

    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ server.php
</IfModule>


//Add extra field in registration form
http://techiescircle.com/add-extra-fields-laravel-5-registration-form/
php artisan make:migration add_extra_field_to_users_table --table=users



//ACL access cortrol list
https://medium.com/@hujjatnazari/the-easiest-way-to-create-acl-for-laravel-projects-1bafe371e7e1


//Install admin LTE theme
https://adminlte.io/blog/integrate-adminlte-with-laravel



https://www.studentstutorial.com/laravel/hello-world

/*
* Add helper
*/
// Code within app\Helpers\Helper.php

namespace App\Helpers;

class Helper
{
    public static function shout(string $string)
    {
        return strtoupper($string);
    }
}
--
// Code within config/app.php

    'aliases' => [
     ...
        'Helper' => App\Helpers\Helper::class,

---
// Code within app/Http/Controllers/SomeController.php

namespace App\Http\Controllers;

use Helper;

class SomeController extends Controller
{

    public function __construct()
    {
        Helper::shout('now i\'m using my helper class in a controller!!');
    }

}
/*
* Add helper
*/


php artisan make:auth              Scaffold basic login and registration views and routes
php artisan make:command           Create a new Artisan command
php artisan make:controller        Create a new controller class
php artisan make:event             Create a new event class
php artisan make:job               Create a new job class
php artisan make:listener          Create a new event listener class
php artisan make:mail              Create a new email class
php artisan make:middleware        Create a new middleware class
php artisan make:migration         Create a new migration file
php artisan make:model             Create a new Eloquent model class
php artisan make:notification      Create a new notification class
php artisan make:policy            Create a new policy class
php artisan make:provider          Create a new service provider class
php artisan make:request           Create a new form request class
php artisan make:seeder            Create a new seeder class
php artisan make:test              Create a new test class





Laravel 5.5

1. Go to root folder 
2. Create two files backend.php and frontend.php
3. Open app/provider/RouteServiceProvider.php
4. Go to function mapWebRoutes()
5. Then write some code
		Route::middleware('web')
             ->namespace('App\Http\Controllers\Backend')
             ->prefix('admin')
             ->group(base_path('routes/backend.php'));

        Route::middleware('web')
             ->namespace('App\Http\Controllers\Frontend')
             ->group(base_path('routes/frontend.php'));


6. Now open backend.php and add root
Route::get('/backtest', 'BackController@index');

Now open frontend.php and add root
Route::get('/', 'FrontController@index');
Route::get('/fronttest', 'FrontController@index');


7. Create and open backend controller
php artisan make:controller Backend/BackController
php artisan make:controller Frontend/FrontController
8. Create and open resouse














https://github.com/hoadv/employee-mgmt-laravel5.4-adminlte
composer update
rename .env.example with .env
configure database on .env file
create a new database with name employees_db
create new tables with: php artisan migrate
create default user for system with: php artisan db:seed
php artisan key:generate
Execute: php artisan config:clear
Execute: php artisan serve
default usename: admin@gmail.com/admin
http://127.0.0.1:8000








$table->string('cs_basic_salary');
$table->string('cs_increament');
$table->string('cs_grad_pay');
$table->string('cs_band');




Route::get('/devtest', 'BlogController@devtest');


 public function devtest(Request $request)
    {
        
        $id  = $request->get('id');

        $search  = $request->get('search');


        if (!empty($id)) {
            $blog = DB::table('blogs')->where('id', $id)->paginate(15);
        }else{
            $blog = DB::table('blogs')->where('title', 'like', '%'.$search.'%')->paginate(3);
        }

        return view('blog.index',compact('blog'))
            ->with('i', (request()->input('page', 1) - 1) * 5);
    }





return view('blog.show',compact('blog'));


{{ route('blog.show',$member->id) }}





API: https://www.toptal.com/laravel/restful-laravel-api-tutorial

http://127.0.0.1:8000/api/posts



//Solved cors issue
https://medium.com/@petehouston/allow-cors-in-laravel-2b574c51d0c1


//Passposr api authentication
composer require paragonie/random_compat:2.*
composer require laravel/passport "4.0.*"

composer require paragonie/random_compat:2.*
composer require laravel/passport=~7.0


//Install jwt packeg for token validation
https://jwt-auth.readthedocs.io/en/develop/laravel-installation/
https://blog.pusher.com/laravel-jwt/
